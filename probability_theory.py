# Задача №1. Вероятность того, что стрелок попадет в мишень, выстрелив один раз, равна 0.8. 
#    Стрелок выстрелил 100 раз. Найдите вероятность того, что стрелок попадет в цель ровно 85 раз.

from math import comb

p = 0.8
q = 1 - p
n = 100
k = 85

binomial_coefficient = comb(n, k)

probability = binomial_coefficient * (p ** k) * (q ** (n - k))

print(f"Вероятность попадания в цель 85 раз: {probability:.6f}")


# --------------------------------------------------------------------------------------------------------------

# Задача №2. Вероятность того, что лампочка перегорит в течение первого дня эксплуатации, равна 0.0004. 
#    В жилом комплексе после ремонта в один день включили 5000 новых лампочек. Какова вероятность, что ни одна из них не перегорит в первый день? 
#    Какова вероятность, что перегорят ровно две?

import math

p = 0.0004
n_lamps = 5000

lambda_param = n_lamps * p

# Вероятность того, что ни одна лампочка не перегорит (k = 0)
k_zero = 0
probability_zero = math.exp(-lambda_param) * (lambda_param ** k_zero) / math.factorial(k_zero)

# Вероятность того, что перегорят ровно две лампочки (k = 2)
k_two = 2
probability_two = math.exp(-lambda_param) * (lambda_param ** k_two) / math.factorial(k_two)

print(f"Вероятность, что ни одна лампочка не перегорит: {probability_zero:.6f}")
print(f"Вероятность, что перегорят две лампочки: {probability_two:.6f}")


# --------------------------------------------------------------------------------------------------------------


#Задача №3. Монету подбросили 144 раза. Какова вероятность, что орел выпадет ровно 70 раз?

import math

n = 144
k = 70
p = 0.5

binomial_coefficient = math.comb(n, k)

probability = binomial_coefficient * (p**k) * ((1-p)**(n-k))

print("Вероятность выпадения орла 70 раз из 144 бросков:", probability)


# --------------------------------------------------------------------------------------------------------------

# Задача №4. Монету подбросили 144 раза. Какова вероятность, что орел выпадет ровно 70 раз?